.card#routing-rules{ data: { turbo: 'true' } }
  %h2.card-title= t('.apply_routing_rules')
  - if can_route?
    .notice
      = t('.routing_rules_notice_html', path: champs_admin_procedure_path(@procedure_id))

    %turbo-frame#go
      = form_tag admin_procedure_groupe_instructeurs_path(@procedure_id),
        method: :get do

        .flex.align-baseline
          #header-search.fr-search-bar{role: "search", data: { controller: 'autosubmit' } }
            = label_tag :q, 'Rechercher par nom', class: 'fr-label'
            = text_field_tag :q, '', class: 'fr-input', type: 'search', placeholder: 'Rechercher par nom'
            %button.fr-btn{title: "Rechercher"} Rechercher

          %fieldset#checkboxes-inline.fr-fieldset.ml-1{"aria-labelledby" => "checkboxes-inline-legend checkboxes-inline-messages"}
            .fr-fieldset__element.fr-fieldset__element--inline
              .fr-checkbox-group
                %input#checkboxes-inline-1{"aria-describedby" => "checkboxes-inline-1-messages", name: "checkboxes-inline-1", type: "checkbox"}/
                %label.fr-label{for: "checkboxes-inline-1"}
                  A configurer (12/20)
                #checkboxes-inline-1-messages.fr-messages-group{"aria-live" => "assertive"}

        .mt-2.width-100
          %table.routing-rules-table.mt-2.width-100
            %thead
              %tr
                %th.far-left Router vers
                %th.if
                %th.target Champ cible du routage
                %th.operator
                %th.value Valeur
        .mt-2.width-100
          - rows.each.with_index do |(targeted_champ, value, groupe_instructeur), row_index|
            = form_tag admin_procedure_routing_rules_path(@procedure_id),
              method: :post,
              class: "form width-100 gi-#{groupe_instructeur.id}",
              data: { controller: 'autosave' } do
              = hidden_groupe_instructeur_tag(groupe_instructeur.id)
              %table.routing-rules-table.condition-table.mt-2.width-100
                %tbody
                  %tr
                    %td.far-left= groupe_instructeur.label
                    %td.if si
                    %td.target= targeted_champ_tag(targeted_champ, row_index)
                    %td.operator est égal à
                    %td.value= value_tag(targeted_champ, value, row_index)

      = paginate @groupe_instructeurs

    = form_tag admin_procedure_update_defaut_groupe_instructeur_path,
      class: 'form flex align-baseline defaut-groupe',
      data: { controller: 'autosave' } do
      = label_tag :defaut_groupe_instructeur_id, 'Et si aucune règle ne correspond, router vers :'
      = select_tag :defaut_groupe_instructeur_id,
        options_for_select(@groupe_instructeurs.pluck(:label, :id), selected: @revision.procedure.defaut_groupe_instructeur.id),
        class: 'width-100'

  - else
    .notice= t('.routing_rules_warning_html', path: champs_admin_procedure_path(@procedure_id))
