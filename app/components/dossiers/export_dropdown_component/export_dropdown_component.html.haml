= render Dropdown::MenuComponent.new(wrapper: :div, button_options: { class: ['fr-btn--sm', @class_btn.present? ? @class_btn : 'fr-btn--secondary']}, menu_options: { id: @count.nil? ? "download_menu" : "download_all_menu", class: ['dropdown-export'] }) do |menu|
  - menu.with_button_inner_html do
    = @count.nil? ? t(".download_all") : t(".download", count: @count)
  - if false
    - menu.with_menu_header_html do
      %p.menu-component-header.fr-px-2w.fr-pt-2w.fr-mb-0
        %span.fr-icon-info-line{ aria: { hidden: true } }
          Des macros ? Lisez la
          = link_to('doc', t('.macros_doc.url'),
            title: t('.macros_doc.title'),
            **external_link_attributes)

    - formats.each do |format|
      - menu.with_item do
        = link_to download_export_path(export_format: format), role: 'menuitem', data: { turbo_method: :post, turbo: true } do
          = t(".everything_#{format}_html")

    - if @procedure.feature_enabled?(:export_template)
      - if export_templates.present?
        - export_templates.each do |export_template|
          - menu.with_item do
            = link_to download_export_path(export_template_id: export_template.id), role: 'menuitem', data: { turbo_method: :post, turbo: true } do
              = "Exporter à partir du modèle #{export_template.name}"
        - menu.with_item do
          = link_to new_instructeur_export_template_path(procedure_id: params[:procedure_id]), role: 'menuitem' do
            Ajouter un modèle d'export
  - menu.with_form do
    .fr-container
      .fr-tabs.fr-my-3w
        %ul.fr-tabs__list{ role: 'tablist' }
          %li{ role: 'presentation' }
            %button.fr-tabs__tab.fr-tabs__tab--icon-left{ id: "tabpanel-standard#{@count}", tabindex: "0", role: "tab", "aria-selected": "true", "aria-controls": "tabpanel-standard#{@count}-panel" } Standard

          %li{ role: 'presentation' }
            %button.fr-tabs__tab.fr-tabs__tab--icon-left{ id: "tabpanel-template#{@count}", tabindex: "-1", role: "tab", "aria-selected": "false", "aria-controls": "tabpanel-template#{@count}-panel" } A partir d'un modèle

        .fr-tabs__panel.fr-pb-8w.fr-tabs__panel--selected{ id: "tabpanel-standard#{@count}-panel", role: "tabpanel", "aria-labelledby": "tabpanel-standard#{@count}", tabindex: "0" }
          = form_with url: download_export_path, namespace: "export#{@count}", data: { turbo_method: :post, turbo: true } do |f|
            = f.hidden_field :statut, value: @statut
            %fieldset.fr-fieldset#radio-hint{ "aria-labelledby": "radio-hint-legend" }
              %legend.fr-fieldset__legend--regular.fr-fieldset__legend#radio-hint-legend Séletionner le format de l'export
              .fr-fieldset__element
                .fr-radio-group
                  = f.radio_button :export_format, 'xlsx'
                  = f.label :export_format_xlsx, 'Fichier xlsx'
              .fr-fieldset__element
                .fr-radio-group
                  = f.radio_button :export_format, 'ods'
                  = f.label :export_format_ods, 'Fichier ods'
              .fr-fieldset__element
                .fr-radio-group
                  = f.radio_button :export_format, 'csv'
                  = f.label :export_format_csv do
                    Fichier csv
                    %span.fr-hint-text Uniquement les dossiers, sans les champs répétables
              .fr-fieldset__element
                .fr-radio-group
                  = f.radio_button :export_format, 'zip'
                  = f.label :export_format_zip do
                    Fichier zip
                    %span.fr-hint-text ne contient pas l'horodatage ni le journal de log

              .fr-fieldset__element
                %ul.fr-btns-group.fr-btns-group--sm.fr-btns-group--inline
                  %li
                    %button.fr-btn.fr-btn--secondary{ type: 'button', "data-action": "click->menu-button#close" } Annuler
                  %li
                    = f.submit "Demander l'export", "data-action": "click->menu-button#close", class: 'fr-btn'


        .fr-tabs__panel.fr-pr-3w.fr-pb-8w{ id: "tabpanel-template#{@count}-panel", role: "tabpanel", "aria-labelledby": "tabpanel-template", tabindex: "0" }
          = form_with url: download_export_path, namespace: "export_template_#{@count}", data: { turbo_method: :post, turbo: true }  do |f|
            = f.hidden_field :statut, value: @statut
            .fr-select-group
              - if export_templates.present?
                %label.fr-label{ for: 'select' }
                  Sélectionner le modèle d'export
                  = f.collection_select :export_template_id, export_templates, :id, :name, {}, { class: "fr-select fr-mb-2w" }
              - else
                %p
                  %i Aucun modèle configuré
              %p
                = link_to "Configurer les modèles d'export", exports_instructeur_procedure_path(procedure_id: params[:procedure_id]), class: 'fr-link'
              %ul.fr-btns-group.fr-btns-group--sm.fr-btns-group--inline
                %li
                  %button.fr-btn.fr-btn--secondary{ type: 'button', "data-action": "click->menu-button#close" } Annuler
                %li
                  = f.submit "Demander l'export", "data-action": "click->menu-button#close", class: 'fr-btn'
